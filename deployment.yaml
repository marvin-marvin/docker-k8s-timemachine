apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "9"
    description: LAN timemachine
  creationTimestamp: null
  generation: 1
  labels:
    k8s-app: timemachine
    location: lan
  name: timemachine
  selfLink: /apis/extensions/v1beta1/namespaces/lan/deployments/timemachine
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: timemachine
      location: lan
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        description: LAN timemachine
      creationTimestamp: null
      labels:
        k8s-app: timemachine
        location: lan
      name: timemachine
    spec:
      containers:
      - env:
        - name: tz
          value: "Europe/Berlin"
        - name: SET_PERMISSIONS
          value: "true"
        - name: PASSWORD
          value: "JoooTimeMachine123"
        - name: SHARE_NAME
          value: "TimeMachine"
        - name: VOLUME_SIZE_LIMIT
          value: "0"
        - name: MIMIC_MODEL
          value: "TimeCapsule6,106"
        - name: LOG_LEVEL
          value: "info"
        - name: CUSTOM_AFP_CONF
          value: "false" 
        image: marvinmarvin/docker-k8s-timemachine
        imagePullPolicy: Always
        name: timemachine
        volumeMounts:
        - mountPath: /var/netatalk
          name: k8s-cfg-timemachine
        - mountPath: /opt/timemachine
          name: k8s-cfg-timemachine-usr2
        resources: {}
        securityContext:
          privileged: false
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: k8s-cfg-timemachine
        hostPath:
          path: /root/k8s-cfg/timemachine
          type: Directory
      - name: k8s-cfg-timemachine-usr2
        hostPath:
          path: /usr2
          type: Directory
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        nodetype: nuc
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
